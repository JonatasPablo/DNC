Notion:
https://dncgroupbr.notion.site/Desafio-Desenvolva-uma-tela-funcional-com-consumo-de-API-caaa8c0d58d94dfda2394ad6c2b1d927

Figma:
https://www.figma.com/design/cPLXzs1LNGDRDluE5pr1z4/Desafio-02%3A-Desafio%3A-Desenvolva-tela-funcional-com-consumo-de-API%C2%B4s?node-id=0-1&p=f&t=qS0T7ZxkeIgNnenj-0

Bootstrap:
https://getbootstrap.com/docs/5.3/getting-started/download/

Consumir o CEP:
https://viacep.com.br/

Consumir previsao do tempo:
https://open-meteo.com/en/docs


> Projete uma interface de usu√°rio seguindo um prot√≥tipo do Figma, desenvolvendo telas focados no design e experiencia do usu√°rio, fornecendo dados importante sobre endere√ßo e previs√£o do tempo atrav√©s de uma API. Este projeto visa criar uma ferramenta √∫til para o dia a dia dos usu√°rios que trabalham com informa√ß√µes deste tipo.
>

## **Contexto**

Voc√™ acaba de ser recrutado como o mais novo desenvolvedor em uma startup inovadora chamada "DncWeather". Esta startup est√° revolucionando a forma como as empresas gerenciam as informa√ß√µes internas e externas. Sua primeira miss√£o na "DncWeather" √© desenvolver um sistema interno para os funcion√°rios, que os ajudar√° a acessar informa√ß√µes cr√≠ticas sobre endere√ßos e previs√µes meteorol√≥gicas de maneira eficiente.

A "DncWeather" acredita que a acessibilidade e a simplicidade s√£o fundamentais para o sucesso de qualquer sistema interno. Portanto, a sua tarefa inicial √© criar uma interface de usu√°rio atraente e funcional que permitir√° aos funcion√°rios inserir facilmente as informa√ß√µes necess√°rias para obter dados de endere√ßo e previs√µes meteorol√≥gicas. Este ser√° o primeiro passo na constru√ß√£o do sistema que ir√° transformar a experi√™ncia dos funcion√°rios na empresa.

## **Como come√ßar?**
Sua jornada come√ßa com o desenvolvimento da tela de informa√ß√µes. Nesta etapa inicial, voc√™ ser√° respons√°vel por criar uma p√°gina da web que permitir√° aos usu√°rios inserir as informa√ß√µes necess√°rias para obter dados de endere√ßo e previs√£o do tempo. Isso servir√° como a base do sistema interno que voc√™ est√° construindo. Portanto, comece projetando e implementando a tela de entrada de informa√ß√µes.

# üéØ Etapas de Desenvolvimento

## **Etapa 01 Desenvolvendo as telas**

Nesta primeira etapa, voc√™ ir√° come√ßar a construir o frontend da aplica√ß√£o seguindo o prot√≥tipo que foi criado no Figma. O foco ser√° na implementa√ß√£o da tela de informa√ß√µes, onde os usu√°rios fornecer√£o os dados necess√°rios para acessar as informa√ß√µes desejadas.

1. **Desenvolvimento Baseado no Prot√≥tipo:** Utilize o prot√≥tipo dispon√≠vel no Figma como refer√™ncia precisa para a cria√ß√£o da interface. Isso inclui o layout, elementos gr√°ficos, posicionamento de campos e bot√µes, cores e estilos. Garanta que a interface seja fiel ao design apresentado no prot√≥tipo.
2. **Implementa√ß√£o da Tela de Informa√ß√µes:** Concentre-se na cria√ß√£o da tela de informa√ß√µes, onde os usu√°rios poder√£o inserir os dados necess√°rios, como nome, endere√ßo e cidade. Certifique-se de criar todos os campos relevantes de acordo com as especifica√ß√µes do prot√≥tipo.
3. **Valida√ß√£o de Campos:** Implemente valida√ß√µes de entrada de dados para garantir que todos os campos obrigat√≥rios sejam preenchidos adequadamente e que os dados inseridos estejam no formato correto. Forne√ßa feedback claro aos usu√°rios caso haja problemas de valida√ß√£o.
4. **Utiliza√ß√£o do Bootstrap (Opcional):** Voc√™ tem a op√ß√£o de utilizar o framework Bootstrap para facilitar o desenvolvimento do design da aplica√ß√£o. O Bootstrap oferece componentes e estilos predefinidos que podem acelerar o processo de desenvolvimento. No entanto, seu uso n√£o √© obrigat√≥rio e fica a crit√©rio do aluno decidir se deseja utiliz√°-lo.

## **Etapa 02 Construindo a integra√ß√£o**

Na segunda etapa, voc√™ ir√° desenvolver duas funcionalidades separadas para consumir dados: uma para obter informa√ß√µes de endere√ßo e outra para obter dados de previs√£o do tempo. Siga os passos abaixo desenvolver essa etapa:

1. **Desenvolvimento dos Formul√°rios:** Comece desenvolvendo os formul√°rios em HTML para que os usu√°rios possam inserir os dados necess√°rios. Certifique-se de seguir o layout e os elementos gr√°ficos conforme definido no prot√≥tipo do Figma.
2. **Funcionalidade de Consumo de Dados:** Desenvolva as funcionalidades de consumo de dados utilizando JavaScript. Voc√™ precisar√° criar duas fun√ß√µes separadas: uma para consumir os dados do CEP e outra para consumir os dados da previs√£o do tempo.
3. **Utiliza√ß√£o de Pr√°ticas Ass√≠ncronas:** Utilize as pr√°ticas async e await para criar essas fun√ß√µes ass√≠ncronas. Isso garantir√° um comportamento eficaz na tela que ir√° exibir os dados, permitindo que a aplica√ß√£o continue funcionando de forma responsiva enquanto aguarda a resposta da API.

üí° **Dica:** utilize as seguintes APIs para obter os dados:
- Captar os dados de endere√ßo: https://viacep.com.br/
- Captar os dados de previs√£o do tempo: https://open-meteo.com/en/docs/

## **Etapa 03 Consumindo a API**

Nesta etapa, sua miss√£o √© desenvolver as duas funcionalidades necess√°rias utilizando JavaScript para consumir as API¬¥s. Para conseguir realizar o desenvolvimento dessas funcionalidades siga esses passos:

1. **Declara√ß√£o de Vari√°veis:** Inicie declarando vari√°veis para armazenar os dados fornecidas pelo usu√°rio. Esses valores ser√£o utilizados para realizar a consulta na API¬¥s de cep e previs√£o do tempo.
2. **Chamada da API:** Utilize o m√©todo fetch para fazer uma requisi√ß√£o na API¬¥s.
3. **Atualiza√ß√£o da Interface:** Utilize os dados obtidos da API para atualizar dinamicamente a interface do usu√°rio (DOM) com as informa√ß√µes relevantes. Por exemplo, voc√™ pode exibir a temperatura atual da regi√£o em um elemento HTML espec√≠fico.

Dica: Para consumir a informa√ß√£o da temperatura da regi√£o, utilize o campo de temperature_2m com o √≠ndice 0 dentro da API.

## **Etapa 04 Testando as informa√ß√µes**

Nesta etapa √∫ltima etapa do desafio, voc√™ ser√° respons√°vel por garantir a qualidade e a confiabilidade das APIs que voc√™ desenvolveu nas etapas anteriores. √â essencial que as APIs funcionem corretamente e forne√ßam dados precisos. Para isso, siga as seguintes diretrizes

- Verifique se todas as informa√ß√µes solicitadas pelos usu√°rios est√£o sendo recebidas corretamente.
- Certifique-se de que a API est√° respondendo com um c√≥digo HTTP 200 quando as solicita√ß√µes s√£o feitas.
- Certifique-se que os dados entregue das API¬¥s, est√£o de acordo com os dados enviados para ela.
- Garanta que os dados estejam sendo armazenados nos campos apropriados da aplica√ß√£o, de acordo com a estrutura definida nas etapas anteriores.

 Crit√©rios de Avalia√ß√£o:
Os crit√©rios de avalia√ß√£o s√£o as conclus√µes das etapas propostas conforme os crit√©rios abaixo.
Lembre-se de verificar os seguintes pontos em cada etapa conforme proposto abaixo.
Crit√©rios
Atendeu √†s Especifica√ß√µes
Pontos
Design semelhante ao Figma
Certifique-se que o seu design apresente uma coer√™ncia e consist√™ncia nas cores selecionadas - Azul 0C70F2, utilize a tipografia Inter e imagens conforme a interface do Figma.
25
Desenvolvimento das funcionalidades
Desenvolva duas funcionalidades utilizando Javascript para consumir as API`s de endere√ßo e CEP. Certifique-se de utilizar o m√©todo fetch para fazer as requisi√ß√µes e utilizar os dados da API para atualizar o DOM. 
25
Integra√ß√£o entre os dados
Desenvolva fun√ß√µes ass√≠ncronas com async e await para garantir o comportamento na tela que ir√° exibir os dados de resposta da API
25
Testando o consumo da API
Garanta que as APIs estejam respondendo com o c√≥digo HTTP200 quando as solicita√ß√µes s√£o feitas.
25

# Entrega

‚ö†Ô∏è **Atente-se a forma de nomear o REPOSIT√ìRIO: ele deve contar com o seu RID. Exemplo: (RID01234_Desafio01). O RID pode ser encontrado dentro da sua plataforma em "meu perfil‚Äù e √© composto por 5 n√∫meros.**

üìé **Como entregar:** O entreg√°vel do desafio √© o link do reposit√≥rio do GitHub.

No package.json, insira as informa√ß√µes do  desafio no github e links conforme exemplo abaixo.
